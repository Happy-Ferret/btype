#!/usr/bin/env node

var argv = require('minimist')(process.argv.slice(2));


function help() {
    console.log([
        'Usage:',
        '  btype <bt file path>'
    ].join('\n'));
}

var incomingStdin = !('isTTY' in process.stdin);

if (process.argv.length < 3 && !incomingStdin) {
    help();
    process.exit(1);
}

var fs = require('fs');
var path = require('path');


var compiler = require('../src/compiler/compiler');
var lexer = require('../src/lexer');
var parser = require('../src/parser');

if (argv._[0]) {
    fs.readFile(argv._[0], function(err, data) {
        if (err) {
            console.error('Could not read file.');
            console.error(err);
            help();
            process.exit(1);
        }

        processData(data);

    });
} else {
    var incomingData = '';
    process.stdin.on('data', function(data) {
        incomingData += data;
    });
    process.stdin.on('end', function() {
        processData(incomingData);
    });
}

function processData(data) {
    var parsed = parser(lexer(data.toString()));
    var compiled = compiler({
        filename: argv._[0],
        tree: parsed,
        format: argv.target,
        config: {
            // Used to define a runtime environment to make application
            // standalone
            runtime: 'runtime' in argv,
            runtimeEntry: argv['runtime-entry'],
            // Used to output debugging information into compiled files
            debugInfo: 'debug-info' in argv,
            debugInfoOutput: argv['debug-info-path'],
        }
    });

    console.log(compiled);
}
