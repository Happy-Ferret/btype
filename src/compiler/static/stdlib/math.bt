import foreign;


func float:fabs(float:i) {
    if i < 0.0 {
        i = i * -1.0;
    }
    return i;
}
export fabs;

func int:iabs(int:i) {
    return foreign.Math.abs(i);
}
export iabs;


# Trig functions

func float:acos(float:i) {
    return foreign.Math.acos(i);
}
export acos;

func float:asin(float:i) {
    return foreign.Math.asin(i);
}
export asin;

func float:atan(float:i) {
    return foreign.Math.atan(i);
}
export atan;

func float:cos(float:i) {
    return foreign.Math.cos(i);
}
export cos;

func float:sin(float:i) {
    return foreign.Math.sin(i);
}
export sin;

func float:tan(float:i) {
    return foreign.Math.tan(i);
}
export tan;


# Int functions

func int:ceil(float:i) {
    return foreign.Math.ceil(i);
}
export ceil;

func int:floor(float:i) {
    return foreign.Math.floor(i);
}
export floor;


# Float functions

func float:exp(float:i) {
    return foreign.Math.exp(i);
}
export exp;

func float:log(float:i) {
    return foreign.Math.log(i);
}
export log;

func float:logN(float:b, float:n) {
    return foreign.Math.log(n) / foreign.Math.log(b);
}
export logN;

func float:sqrt(float:i) {
    return foreign.Math.sqrt(i);
}
export sqrt;

func float:hypot(float:a, float:b) {
    return sqrt(a * a + b * b);
}
export hypot;

func float:atan2(float:y, float:x) {
    return foreign.Math.atan2(y, x);
}
export atan2;

func float:pow(float:y, float:x) {
    return foreign.Math.pow(y, x);
}
export pow;


# Constants
func float:PI() {
    return 3.141592653589793;
}
export PI;
func float:E() {
    return 2.718281828459045;
}
export E;
func float:LN10() {
    return 2.302585092994046;
}
export LN10;
func float:LN2() {
    return 0.6931471805599453;
}
export LN2;
func float:LN10E() {
    return 0.4342944819032518;
}
export LN10E;
func float:LN2E() {
    return 1.4426950408889634;
}
export LN2E;
func float:SQRT1_2() {
    return 0.7071067811865476;
}
export SQRT1_2;
func float:SQRT2() {
    return 1.4142135623730951;
}
export SQRT2;


#@ TODO: See if we can use the native min/max functions here
func float:min(float:x, float:y) {
    if (y < x) return y;
    return x;
}
export min;
func float:max(float:x, float:y) {
    if (y > x) return y;
    return x;
}
export max;
func float:bound(float:i, float:min, float:max) {
    if (i < min) return min;
    if (i > max) return max;
    return i;
}
export bound;

func int:imin(int:x, int:y) {
    if (y < x) return y;
    return x;
}
export imin;
func int:imax(int:x, int:y) {
    if (y > x) return y;
    return x;
}
export imax;
func int:ibound(int:i, int:min, int:max) {
    if (i < min) return min;
    if (i > max) return max;
    return i;
}
export ibound;
